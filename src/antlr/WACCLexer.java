// Generated from ./WACCLexer.g4 by ANTLR 4.4
package antlr;
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class WACCLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.4", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		MULTIPLY=1, DIVIDE=2, MODULO=3, PLUS=4, MINUS=5, GREATER=6, GREATEREQ=7, 
		LESS=8, LESSEQ=9, EQUALITY=10, NOTEQ=11, AND=12, OR=13, NOT=14, NEGATIVE=15, 
		LENGTH=16, ORDINAL=17, CHR=18, LBRAC=19, RBRAC=20, LSQBRAC=21, RSQBRAC=22, 
		COMMA=23, EQUAL=24, SEMICOLON=25, SINGLEQUOTE=26, DOUBLEQUOTE=27, SLASH=28, 
		EOL=29, WHITESPACE=30, TAB=31, INT=32, BOOL=33, CHAR=34, STRING=35, SKIP=36, 
		READ=37, FREE=38, RETURN=39, EXIT=40, PRINT=41, PRINTLN=42, IF=43, THEN=44, 
		ELSE=45, FI=46, WHILE=47, DO=48, DONE=49, BEGIN=50, END=51, CALL=52, NEWPAIR=53, 
		FIRST=54, SECOND=55, IS=56, NULL=57, PAIR=58, TRUE=59, FALSE=60, INTEGER=61, 
		IDENT=62, ESCCHAR=63, CHARLIT=64, STRLIT=65, COMMENT=66;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] tokenNames = {
		"'\\u0000'", "'\\u0001'", "'\\u0002'", "'\\u0003'", "'\\u0004'", "'\\u0005'", 
		"'\\u0006'", "'\\u0007'", "'\b'", "'\t'", "'\n'", "'\\u000B'", "'\f'", 
		"'\r'", "'\\u000E'", "'\\u000F'", "'\\u0010'", "'\\u0011'", "'\\u0012'", 
		"'\\u0013'", "'\\u0014'", "'\\u0015'", "'\\u0016'", "'\\u0017'", "'\\u0018'", 
		"'\\u0019'", "'\\u001A'", "'\\u001B'", "'\\u001C'", "'\\u001D'", "'\\u001E'", 
		"'\\u001F'", "' '", "'!'", "'\"'", "'#'", "'$'", "'%'", "'&'", "'''", 
		"'('", "')'", "'*'", "'+'", "','", "'-'", "'.'", "'/'", "'0'", "'1'", 
		"'2'", "'3'", "'4'", "'5'", "'6'", "'7'", "'8'", "'9'", "':'", "';'", 
		"'<'", "'='", "'>'", "'?'", "'@'", "'A'", "'B'"
	};
	public static final String[] ruleNames = {
		"MULTIPLY", "DIVIDE", "MODULO", "PLUS", "MINUS", "GREATER", "GREATEREQ", 
		"LESS", "LESSEQ", "EQUALITY", "NOTEQ", "AND", "OR", "NOT", "NEGATIVE", 
		"LENGTH", "ORDINAL", "CHR", "LBRAC", "RBRAC", "LSQBRAC", "RSQBRAC", "COMMA", 
		"EQUAL", "SEMICOLON", "SINGLEQUOTE", "DOUBLEQUOTE", "SLASH", "EOL", "WHITESPACE", 
		"TAB", "INT", "BOOL", "CHAR", "STRING", "SKIP", "READ", "FREE", "RETURN", 
		"EXIT", "PRINT", "PRINTLN", "IF", "THEN", "ELSE", "FI", "WHILE", "DO", 
		"DONE", "BEGIN", "END", "CALL", "NEWPAIR", "FIRST", "SECOND", "IS", "NULL", 
		"PAIR", "TRUE", "FALSE", "CHARS", "DIGIT", "INTEGER", "IDENT", "ESCCHAR", 
		"CHARLIT", "STRLIT", "COMMENT"
	};


	public WACCLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "WACCLexer.g4"; }

	@Override
	public String[] getTokenNames() { return tokenNames; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2D\u019b\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC\4D\tD\4E\tE\3\2\3\2\3\3\3\3\3\4\3"+
		"\4\3\5\3\5\3\6\3\6\3\7\3\7\3\b\3\b\3\b\3\t\3\t\3\n\3\n\3\n\3\13\3\13\3"+
		"\13\3\f\3\f\3\f\3\r\3\r\3\r\3\16\3\16\3\16\3\17\3\17\3\20\3\20\3\21\3"+
		"\21\3\21\3\21\3\22\3\22\3\22\3\22\3\23\3\23\3\23\3\23\3\24\3\24\3\25\3"+
		"\25\3\26\3\26\3\27\3\27\3\30\3\30\3\31\3\31\3\32\3\32\3\33\3\33\3\34\3"+
		"\34\3\35\3\35\3\36\3\36\3\36\3\36\3\37\3\37\3\37\3\37\3 \3 \3 \3 \3!\3"+
		"!\3!\3!\3\"\3\"\3\"\3\"\3\"\3#\3#\3#\3#\3#\3$\3$\3$\3$\3$\3$\3$\3%\3%"+
		"\3%\3%\3%\3&\3&\3&\3&\3&\3\'\3\'\3\'\3\'\3\'\3(\3(\3(\3(\3(\3(\3(\3)\3"+
		")\3)\3)\3)\3*\3*\3*\3*\3*\3*\3+\3+\3+\3+\3+\3+\3+\3+\3,\3,\3,\3-\3-\3"+
		"-\3-\3-\3.\3.\3.\3.\3.\3/\3/\3/\3\60\3\60\3\60\3\60\3\60\3\60\3\61\3\61"+
		"\3\61\3\62\3\62\3\62\3\62\3\62\3\63\3\63\3\63\3\63\3\63\3\63\3\64\3\64"+
		"\3\64\3\64\3\65\3\65\3\65\3\65\3\65\3\66\3\66\3\66\3\66\3\66\3\66\3\66"+
		"\3\66\3\67\3\67\3\67\3\67\38\38\38\38\39\39\39\3:\3:\3:\3:\3:\3;\3;\3"+
		";\3;\3;\3<\3<\3<\3<\3<\3=\3=\3=\3=\3=\3=\3>\3>\3>\5>\u0172\n>\3?\3?\3"+
		"@\6@\u0177\n@\r@\16@\u0178\3A\3A\7A\u017d\nA\fA\16A\u0180\13A\3B\3B\3"+
		"C\3C\3C\3C\3D\3D\7D\u018a\nD\fD\16D\u018d\13D\3D\3D\3E\3E\7E\u0193\nE"+
		"\fE\16E\u0196\13E\3E\3E\3E\3E\2\2F\3\3\5\4\7\5\t\6\13\7\r\b\17\t\21\n"+
		"\23\13\25\f\27\r\31\16\33\17\35\20\37\21!\22#\23%\24\'\25)\26+\27-\30"+
		"/\31\61\32\63\33\65\34\67\359\36;\37= ?!A\"C#E$G%I&K\'M(O)Q*S+U,W-Y.["+
		"/]\60_\61a\62c\63e\64g\65i\66k\67m8o9q:s;u<w=y>{\2}\2\177?\u0081@\u0083"+
		"A\u0085B\u0087C\u0089D\3\2\7\5\2$$))^^\5\2C\\aac|\6\2\62;C\\aac|\13\2"+
		"$$))\62\62^^ddhhppttvv\3\2\f\f\u019d\2\3\3\2\2\2\2\5\3\2\2\2\2\7\3\2\2"+
		"\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2\17\3\2\2\2\2\21\3\2\2\2\2\23"+
		"\3\2\2\2\2\25\3\2\2\2\2\27\3\2\2\2\2\31\3\2\2\2\2\33\3\2\2\2\2\35\3\2"+
		"\2\2\2\37\3\2\2\2\2!\3\2\2\2\2#\3\2\2\2\2%\3\2\2\2\2\'\3\2\2\2\2)\3\2"+
		"\2\2\2+\3\2\2\2\2-\3\2\2\2\2/\3\2\2\2\2\61\3\2\2\2\2\63\3\2\2\2\2\65\3"+
		"\2\2\2\2\67\3\2\2\2\29\3\2\2\2\2;\3\2\2\2\2=\3\2\2\2\2?\3\2\2\2\2A\3\2"+
		"\2\2\2C\3\2\2\2\2E\3\2\2\2\2G\3\2\2\2\2I\3\2\2\2\2K\3\2\2\2\2M\3\2\2\2"+
		"\2O\3\2\2\2\2Q\3\2\2\2\2S\3\2\2\2\2U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2["+
		"\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2"+
		"\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2\2\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2"+
		"\2u\3\2\2\2\2w\3\2\2\2\2y\3\2\2\2\2\177\3\2\2\2\2\u0081\3\2\2\2\2\u0083"+
		"\3\2\2\2\2\u0085\3\2\2\2\2\u0087\3\2\2\2\2\u0089\3\2\2\2\3\u008b\3\2\2"+
		"\2\5\u008d\3\2\2\2\7\u008f\3\2\2\2\t\u0091\3\2\2\2\13\u0093\3\2\2\2\r"+
		"\u0095\3\2\2\2\17\u0097\3\2\2\2\21\u009a\3\2\2\2\23\u009c\3\2\2\2\25\u009f"+
		"\3\2\2\2\27\u00a2\3\2\2\2\31\u00a5\3\2\2\2\33\u00a8\3\2\2\2\35\u00ab\3"+
		"\2\2\2\37\u00ad\3\2\2\2!\u00af\3\2\2\2#\u00b3\3\2\2\2%\u00b7\3\2\2\2\'"+
		"\u00bb\3\2\2\2)\u00bd\3\2\2\2+\u00bf\3\2\2\2-\u00c1\3\2\2\2/\u00c3\3\2"+
		"\2\2\61\u00c5\3\2\2\2\63\u00c7\3\2\2\2\65\u00c9\3\2\2\2\67\u00cb\3\2\2"+
		"\29\u00cd\3\2\2\2;\u00cf\3\2\2\2=\u00d3\3\2\2\2?\u00d7\3\2\2\2A\u00db"+
		"\3\2\2\2C\u00df\3\2\2\2E\u00e4\3\2\2\2G\u00e9\3\2\2\2I\u00f0\3\2\2\2K"+
		"\u00f5\3\2\2\2M\u00fa\3\2\2\2O\u00ff\3\2\2\2Q\u0106\3\2\2\2S\u010b\3\2"+
		"\2\2U\u0111\3\2\2\2W\u0119\3\2\2\2Y\u011c\3\2\2\2[\u0121\3\2\2\2]\u0126"+
		"\3\2\2\2_\u0129\3\2\2\2a\u012f\3\2\2\2c\u0132\3\2\2\2e\u0137\3\2\2\2g"+
		"\u013d\3\2\2\2i\u0141\3\2\2\2k\u0146\3\2\2\2m\u014e\3\2\2\2o\u0152\3\2"+
		"\2\2q\u0156\3\2\2\2s\u0159\3\2\2\2u\u015e\3\2\2\2w\u0163\3\2\2\2y\u0168"+
		"\3\2\2\2{\u0171\3\2\2\2}\u0173\3\2\2\2\177\u0176\3\2\2\2\u0081\u017a\3"+
		"\2\2\2\u0083\u0181\3\2\2\2\u0085\u0183\3\2\2\2\u0087\u0187\3\2\2\2\u0089"+
		"\u0190\3\2\2\2\u008b\u008c\7,\2\2\u008c\4\3\2\2\2\u008d\u008e\7\61\2\2"+
		"\u008e\6\3\2\2\2\u008f\u0090\7\'\2\2\u0090\b\3\2\2\2\u0091\u0092\7-\2"+
		"\2\u0092\n\3\2\2\2\u0093\u0094\7/\2\2\u0094\f\3\2\2\2\u0095\u0096\7@\2"+
		"\2\u0096\16\3\2\2\2\u0097\u0098\7@\2\2\u0098\u0099\7?\2\2\u0099\20\3\2"+
		"\2\2\u009a\u009b\7>\2\2\u009b\22\3\2\2\2\u009c\u009d\7>\2\2\u009d\u009e"+
		"\7?\2\2\u009e\24\3\2\2\2\u009f\u00a0\7?\2\2\u00a0\u00a1\7?\2\2\u00a1\26"+
		"\3\2\2\2\u00a2\u00a3\7#\2\2\u00a3\u00a4\7?\2\2\u00a4\30\3\2\2\2\u00a5"+
		"\u00a6\7(\2\2\u00a6\u00a7\7(\2\2\u00a7\32\3\2\2\2\u00a8\u00a9\7~\2\2\u00a9"+
		"\u00aa\7~\2\2\u00aa\34\3\2\2\2\u00ab\u00ac\7#\2\2\u00ac\36\3\2\2\2\u00ad"+
		"\u00ae\7/\2\2\u00ae \3\2\2\2\u00af\u00b0\7n\2\2\u00b0\u00b1\7g\2\2\u00b1"+
		"\u00b2\7p\2\2\u00b2\"\3\2\2\2\u00b3\u00b4\7q\2\2\u00b4\u00b5\7t\2\2\u00b5"+
		"\u00b6\7f\2\2\u00b6$\3\2\2\2\u00b7\u00b8\7e\2\2\u00b8\u00b9\7j\2\2\u00b9"+
		"\u00ba\7t\2\2\u00ba&\3\2\2\2\u00bb\u00bc\7*\2\2\u00bc(\3\2\2\2\u00bd\u00be"+
		"\7+\2\2\u00be*\3\2\2\2\u00bf\u00c0\7]\2\2\u00c0,\3\2\2\2\u00c1\u00c2\7"+
		"_\2\2\u00c2.\3\2\2\2\u00c3\u00c4\7.\2\2\u00c4\60\3\2\2\2\u00c5\u00c6\7"+
		"?\2\2\u00c6\62\3\2\2\2\u00c7\u00c8\7=\2\2\u00c8\64\3\2\2\2\u00c9\u00ca"+
		"\7)\2\2\u00ca\66\3\2\2\2\u00cb\u00cc\7$\2\2\u00cc8\3\2\2\2\u00cd\u00ce"+
		"\7^\2\2\u00ce:\3\2\2\2\u00cf\u00d0\7\f\2\2\u00d0\u00d1\3\2\2\2\u00d1\u00d2"+
		"\b\36\2\2\u00d2<\3\2\2\2\u00d3\u00d4\7\"\2\2\u00d4\u00d5\3\2\2\2\u00d5"+
		"\u00d6\b\37\2\2\u00d6>\3\2\2\2\u00d7\u00d8\7\13\2\2\u00d8\u00d9\3\2\2"+
		"\2\u00d9\u00da\b \2\2\u00da@\3\2\2\2\u00db\u00dc\7k\2\2\u00dc\u00dd\7"+
		"p\2\2\u00dd\u00de\7v\2\2\u00deB\3\2\2\2\u00df\u00e0\7d\2\2\u00e0\u00e1"+
		"\7q\2\2\u00e1\u00e2\7q\2\2\u00e2\u00e3\7n\2\2\u00e3D\3\2\2\2\u00e4\u00e5"+
		"\7e\2\2\u00e5\u00e6\7j\2\2\u00e6\u00e7\7c\2\2\u00e7\u00e8\7t\2\2\u00e8"+
		"F\3\2\2\2\u00e9\u00ea\7u\2\2\u00ea\u00eb\7v\2\2\u00eb\u00ec\7t\2\2\u00ec"+
		"\u00ed\7k\2\2\u00ed\u00ee\7p\2\2\u00ee\u00ef\7i\2\2\u00efH\3\2\2\2\u00f0"+
		"\u00f1\7u\2\2\u00f1\u00f2\7m\2\2\u00f2\u00f3\7k\2\2\u00f3\u00f4\7r\2\2"+
		"\u00f4J\3\2\2\2\u00f5\u00f6\7t\2\2\u00f6\u00f7\7g\2\2\u00f7\u00f8\7c\2"+
		"\2\u00f8\u00f9\7f\2\2\u00f9L\3\2\2\2\u00fa\u00fb\7h\2\2\u00fb\u00fc\7"+
		"t\2\2\u00fc\u00fd\7g\2\2\u00fd\u00fe\7g\2\2\u00feN\3\2\2\2\u00ff\u0100"+
		"\7t\2\2\u0100\u0101\7g\2\2\u0101\u0102\7v\2\2\u0102\u0103\7w\2\2\u0103"+
		"\u0104\7t\2\2\u0104\u0105\7p\2\2\u0105P\3\2\2\2\u0106\u0107\7g\2\2\u0107"+
		"\u0108\7z\2\2\u0108\u0109\7k\2\2\u0109\u010a\7v\2\2\u010aR\3\2\2\2\u010b"+
		"\u010c\7r\2\2\u010c\u010d\7t\2\2\u010d\u010e\7k\2\2\u010e\u010f\7p\2\2"+
		"\u010f\u0110\7v\2\2\u0110T\3\2\2\2\u0111\u0112\7r\2\2\u0112\u0113\7t\2"+
		"\2\u0113\u0114\7k\2\2\u0114\u0115\7p\2\2\u0115\u0116\7v\2\2\u0116\u0117"+
		"\7n\2\2\u0117\u0118\7p\2\2\u0118V\3\2\2\2\u0119\u011a\7k\2\2\u011a\u011b"+
		"\7h\2\2\u011bX\3\2\2\2\u011c\u011d\7v\2\2\u011d\u011e\7j\2\2\u011e\u011f"+
		"\7g\2\2\u011f\u0120\7p\2\2\u0120Z\3\2\2\2\u0121\u0122\7g\2\2\u0122\u0123"+
		"\7n\2\2\u0123\u0124\7u\2\2\u0124\u0125\7g\2\2\u0125\\\3\2\2\2\u0126\u0127"+
		"\7h\2\2\u0127\u0128\7k\2\2\u0128^\3\2\2\2\u0129\u012a\7y\2\2\u012a\u012b"+
		"\7j\2\2\u012b\u012c\7k\2\2\u012c\u012d\7n\2\2\u012d\u012e\7g\2\2\u012e"+
		"`\3\2\2\2\u012f\u0130\7f\2\2\u0130\u0131\7q\2\2\u0131b\3\2\2\2\u0132\u0133"+
		"\7f\2\2\u0133\u0134\7q\2\2\u0134\u0135\7p\2\2\u0135\u0136\7g\2\2\u0136"+
		"d\3\2\2\2\u0137\u0138\7d\2\2\u0138\u0139\7g\2\2\u0139\u013a\7i\2\2\u013a"+
		"\u013b\7k\2\2\u013b\u013c\7p\2\2\u013cf\3\2\2\2\u013d\u013e\7g\2\2\u013e"+
		"\u013f\7p\2\2\u013f\u0140\7f\2\2\u0140h\3\2\2\2\u0141\u0142\7e\2\2\u0142"+
		"\u0143\7c\2\2\u0143\u0144\7n\2\2\u0144\u0145\7n\2\2\u0145j\3\2\2\2\u0146"+
		"\u0147\7p\2\2\u0147\u0148\7g\2\2\u0148\u0149\7y\2\2\u0149\u014a\7r\2\2"+
		"\u014a\u014b\7c\2\2\u014b\u014c\7k\2\2\u014c\u014d\7t\2\2\u014dl\3\2\2"+
		"\2\u014e\u014f\7h\2\2\u014f\u0150\7u\2\2\u0150\u0151\7v\2\2\u0151n\3\2"+
		"\2\2\u0152\u0153\7u\2\2\u0153\u0154\7p\2\2\u0154\u0155\7f\2\2\u0155p\3"+
		"\2\2\2\u0156\u0157\7k\2\2\u0157\u0158\7u\2\2\u0158r\3\2\2\2\u0159\u015a"+
		"\7p\2\2\u015a\u015b\7w\2\2\u015b\u015c\7n\2\2\u015c\u015d\7n\2\2\u015d"+
		"t\3\2\2\2\u015e\u015f\7r\2\2\u015f\u0160\7c\2\2\u0160\u0161\7k\2\2\u0161"+
		"\u0162\7t\2\2\u0162v\3\2\2\2\u0163\u0164\7v\2\2\u0164\u0165\7t\2\2\u0165"+
		"\u0166\7w\2\2\u0166\u0167\7g\2\2\u0167x\3\2\2\2\u0168\u0169\7h\2\2\u0169"+
		"\u016a\7c\2\2\u016a\u016b\7n\2\2\u016b\u016c\7u\2\2\u016c\u016d\7g\2\2"+
		"\u016dz\3\2\2\2\u016e\u0172\n\2\2\2\u016f\u0170\7^\2\2\u0170\u0172\5\u0083"+
		"B\2\u0171\u016e\3\2\2\2\u0171\u016f\3\2\2\2\u0172|\3\2\2\2\u0173\u0174"+
		"\4\62;\2\u0174~\3\2\2\2\u0175\u0177\5}?\2\u0176\u0175\3\2\2\2\u0177\u0178"+
		"\3\2\2\2\u0178\u0176\3\2\2\2\u0178\u0179\3\2\2\2\u0179\u0080\3\2\2\2\u017a"+
		"\u017e\t\3\2\2\u017b\u017d\t\4\2\2\u017c\u017b\3\2\2\2\u017d\u0180\3\2"+
		"\2\2\u017e\u017c\3\2\2\2\u017e\u017f\3\2\2\2\u017f\u0082\3\2\2\2\u0180"+
		"\u017e\3\2\2\2\u0181\u0182\t\5\2\2\u0182\u0084\3\2\2\2\u0183\u0184\5\65"+
		"\33\2\u0184\u0185\5{>\2\u0185\u0186\5\65\33\2\u0186\u0086\3\2\2\2\u0187"+
		"\u018b\5\67\34\2\u0188\u018a\5{>\2\u0189\u0188\3\2\2\2\u018a\u018d\3\2"+
		"\2\2\u018b\u0189\3\2\2\2\u018b\u018c\3\2\2\2\u018c\u018e\3\2\2\2\u018d"+
		"\u018b\3\2\2\2\u018e\u018f\5\67\34\2\u018f\u0088\3\2\2\2\u0190\u0194\7"+
		"%\2\2\u0191\u0193\n\6\2\2\u0192\u0191\3\2\2\2\u0193\u0196\3\2\2\2\u0194"+
		"\u0192\3\2\2\2\u0194\u0195\3\2\2\2\u0195\u0197\3\2\2\2\u0196\u0194\3\2"+
		"\2\2\u0197\u0198\7\f\2\2\u0198\u0199\3\2\2\2\u0199\u019a\bE\2\2\u019a"+
		"\u008a\3\2\2\2\b\2\u0171\u0178\u017e\u018b\u0194\3\b\2\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}